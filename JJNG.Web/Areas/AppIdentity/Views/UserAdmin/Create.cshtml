@model UserCreateModel

@{
    Layout = "_CreateEditLayout";
    var actionName = ViewContext.RouteData.Values["action"].ToString();
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
    ViewData["action"] = actionName;
    ViewData["controller"] = controllerName;
    ViewData["area"] = areaName;
}
<div class="col-md-12">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("Department", ViewData["Department"] as SelectList, "请选择", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("Position", ViewData["Position"] as SelectList, "请选择", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("Branch", ViewData["Branch"] as SelectList, "请选择", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", Type = "password" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", Type = "password" } })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>
</div>
