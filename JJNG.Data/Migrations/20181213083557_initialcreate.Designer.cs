// <auto-generated />
using JJNG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace JJNG.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181213083557_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JJNG.Data.AppMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<string>("Area");

                    b.Property<string>("Controller");

                    b.Property<string>("Description");

                    b.Property<int>("Follow");

                    b.Property<int>("Grade");

                    b.Property<string>("Ico");

                    b.Property<string>("Name");

                    b.Property<int>("Sequence");

                    b.Property<string>("State");

                    b.Property<string>("Url");

                    b.Property<bool>("Valid");

                    b.HasKey("Id");

                    b.ToTable("App_Menu");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhFrontDeskAccounts", b =>
                {
                    b.Property<long>("FrontDeskAccountsId");

                    b.Property<string>("Branch")
                        .IsRequired();

                    b.Property<string>("Channel")
                        .IsRequired();

                    b.Property<int>("CustomerCount");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("EnteringDate");

                    b.Property<string>("EnteringStaff")
                        .IsRequired();

                    b.Property<int>("HouseNumber");

                    b.Property<bool>("IsFinance");

                    b.Property<bool>("IsFinish");

                    b.Property<bool>("IsFront");

                    b.Property<string>("Note");

                    b.Property<double>("Receivable");

                    b.Property<double>("Received");

                    b.Property<string>("RelationStaff");

                    b.Property<DateTime>("StartDate");

                    b.Property<double>("TotalPrice");

                    b.Property<double>("UnitPrice");

                    b.HasKey("FrontDeskAccountsId");

                    b.ToTable("Brh_FrontDeskAccounts");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhFrontPaymentDetial", b =>
                {
                    b.Property<int>("FrontPaymentDetialId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FrontDeskAccountsId");

                    b.Property<double>("PayAmount");

                    b.Property<DateTime>("PayDate");

                    b.Property<string>("PayWay")
                        .IsRequired();

                    b.HasKey("FrontPaymentDetialId");

                    b.HasIndex("FrontDeskAccountsId");

                    b.ToTable("Brh_FrontPaymentDetial");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhFrontPaymentDetial", b =>
                {
                    b.HasOne("JJNG.Data.Branch.BrhFrontDeskAccounts", "BrhFrontDeskAccounts")
                        .WithMany("BrhFrontPaymentDetial")
                        .HasForeignKey("FrontDeskAccountsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
