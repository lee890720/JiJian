// <auto-generated />
using JJNG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace JJNG.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JJNG.Data.AppMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<string>("Area");

                    b.Property<string>("Controller");

                    b.Property<string>("Description");

                    b.Property<int>("Follow");

                    b.Property<int>("Grade");

                    b.Property<string>("Ico");

                    b.Property<string>("Name");

                    b.Property<int>("Sequence");

                    b.Property<string>("State");

                    b.Property<string>("Url");

                    b.Property<bool>("Valid");

                    b.HasKey("Id");

                    b.ToTable("App_Menu");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhConnectRecord", b =>
                {
                    b.Property<int>("ConnectRecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BillCount");

                    b.Property<string>("Branch")
                        .IsRequired();

                    b.Property<int>("CardCount");

                    b.Property<DateTime>("EnteringDate");

                    b.Property<string>("EnteringStaff")
                        .IsRequired();

                    b.Property<double>("HouseCash");

                    b.Property<string>("MorningStaff");

                    b.Property<string>("NigthStaff");

                    b.Property<string>("Note");

                    b.Property<double>("OtherCash");

                    b.Property<double>("RevolvingFund");

                    b.HasKey("ConnectRecordId");

                    b.ToTable("Brh_ConnectRecord");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhEarningRecord", b =>
                {
                    b.Property<int>("EarningRecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<string>("Branch")
                        .IsRequired();

                    b.Property<string>("EarningType");

                    b.Property<DateTime>("EnteringDate");

                    b.Property<string>("EnteringStaff")
                        .IsRequired();

                    b.Property<bool>("IsFinance");

                    b.Property<string>("Note");

                    b.Property<string>("PaymentType")
                        .IsRequired();

                    b.Property<string>("Source");

                    b.HasKey("EarningRecordId");

                    b.ToTable("Brh_EarningRecord");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhExpendRecord", b =>
                {
                    b.Property<int>("ExpendRecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<string>("Branch")
                        .IsRequired();

                    b.Property<string>("ConnectNumber");

                    b.Property<DateTime>("EnteringDate");

                    b.Property<string>("EnteringStaff")
                        .IsRequired();

                    b.Property<string>("ExpendType");

                    b.Property<bool>("IsFinance");

                    b.Property<string>("Note");

                    b.Property<string>("PaymentType")
                        .IsRequired();

                    b.Property<string>("Purpose");

                    b.HasKey("ExpendRecordId");

                    b.ToTable("Brh_ExpendRecord");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhFrontDeskAccounts", b =>
                {
                    b.Property<long>("FrontDeskAccountsId");

                    b.Property<string>("Branch")
                        .IsRequired();

                    b.Property<string>("Channel")
                        .IsRequired();

                    b.Property<int>("CustomerCount");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("EnteringDate");

                    b.Property<string>("EnteringStaff")
                        .IsRequired();

                    b.Property<string>("FrontDeskLeader");

                    b.Property<int>("HouseNumber");

                    b.Property<bool>("IsFinance");

                    b.Property<bool>("IsFinish");

                    b.Property<bool>("IsFront");

                    b.Property<string>("Note");

                    b.Property<double>("Receivable");

                    b.Property<double>("Received");

                    b.Property<string>("RelationStaff");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Steward");

                    b.Property<string>("StewardLeader");

                    b.Property<double>("TotalPrice");

                    b.Property<double>("UnitPrice");

                    b.HasKey("FrontDeskAccountsId");

                    b.ToTable("Brh_FrontDeskAccounts");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhFrontPaymentDetial", b =>
                {
                    b.Property<int>("FrontPaymentDetialId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FrontDeskAccountsId");

                    b.Property<double>("PayAmount");

                    b.Property<DateTime>("PayDate");

                    b.Property<string>("PayWay")
                        .IsRequired();

                    b.HasKey("FrontPaymentDetialId");

                    b.HasIndex("FrontDeskAccountsId");

                    b.ToTable("Brh_FrontPaymentDetial");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhImprestAccounts", b =>
                {
                    b.Property<int>("ImprestAccountsId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Balance");

                    b.Property<string>("BelongTo");

                    b.Property<string>("Department");

                    b.Property<double>("Equity");

                    b.Property<string>("ImprestAccountsName");

                    b.Property<string>("Manager");

                    b.HasKey("ImprestAccountsId");

                    b.ToTable("Brh_ImprestAccounts");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhImprestRecord", b =>
                {
                    b.Property<int>("ImprestRecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<string>("Branch")
                        .IsRequired();

                    b.Property<string>("ConnectNumber");

                    b.Property<DateTime>("EnteringDate");

                    b.Property<string>("EnteringStaff")
                        .IsRequired();

                    b.Property<string>("ExpendType");

                    b.Property<int>("ImprestAccountsId");

                    b.Property<bool>("IsFinance");

                    b.Property<string>("Note");

                    b.Property<string>("PaymentType")
                        .IsRequired();

                    b.Property<string>("Purpose");

                    b.HasKey("ImprestRecordId");

                    b.HasIndex("ImprestAccountsId");

                    b.ToTable("Brh_ImprestRecord");
                });

            modelBuilder.Entity("JJNG.Data.Finance.FncChannelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChannelType");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("Fnc_ChannelType");
                });

            modelBuilder.Entity("JJNG.Data.Finance.FncEarningType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EarningType");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("Fnc_EarningType");
                });

            modelBuilder.Entity("JJNG.Data.Finance.FncExpendType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExpendType");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("Fnc_ExpendType");
                });

            modelBuilder.Entity("JJNG.Data.Finance.FncPaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PaymentType");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("Fnc_PaymentType");
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhFrontPaymentDetial", b =>
                {
                    b.HasOne("JJNG.Data.Branch.BrhFrontDeskAccounts", "BrhFrontDeskAccounts")
                        .WithMany("BrhFrontPaymentDetial")
                        .HasForeignKey("FrontDeskAccountsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JJNG.Data.Branch.BrhImprestRecord", b =>
                {
                    b.HasOne("JJNG.Data.Branch.BrhImprestAccounts", "BrhImprestAccounts")
                        .WithMany("BrhImprestRecord")
                        .HasForeignKey("ImprestAccountsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
